$NetBSD: patch-ac,v 1.1 2011/07/18 19:06:02 drochner Exp $

--- lib/backupclient/BackupClientFileAttributes.cpp.orig	2006-02-23 20:47:37.000000000 +0000
+++ lib/backupclient/BackupClientFileAttributes.cpp
@@ -481,7 +481,7 @@ void BackupClientFileAttributes::FillAtt
 	char* buffer = static_cast<char*>(outputBlock.GetBuffer());
 
 	// Add the path name for the symbolic link, and add 0 termination
-	std::memcpy(buffer+oldSize, linkedTo, linkedToSize);
+	::memcpy(buffer+oldSize, linkedTo, linkedToSize);
 	buffer[oldSize+linkedToSize] = '\0';
 }
 #endif
@@ -549,9 +549,9 @@ void BackupClientFileAttributes::FillExt
 
 				// Store length and text for attibute name
 				u_int16_t keyLength = htons(attrKey.size()+1);
-				std::memcpy(buffer+xattrSize, &keyLength, sizeof(u_int16_t));
+				::memcpy(buffer+xattrSize, &keyLength, sizeof(u_int16_t));
 				xattrSize += sizeof(u_int16_t);
-				std::memcpy(buffer+xattrSize, attrKey.c_str(), attrKey.size()+1);
+				::memcpy(buffer+xattrSize, attrKey.c_str(), attrKey.size()+1);
 				xattrSize += attrKey.size()+1;
 
 				// Leave space for value size
@@ -584,12 +584,12 @@ void BackupClientFileAttributes::FillExt
 
 				// Fill in value size
 				u_int32_t valueLength = htonl(valueSize);
-				std::memcpy(buffer+valueSizeOffset, &valueLength, sizeof(u_int32_t));
+				::memcpy(buffer+valueSizeOffset, &valueLength, sizeof(u_int32_t));
 			}
 
 			// Fill in attribute block size
 			u_int32_t xattrBlockLength = htonl(xattrSize-xattrBlockSizeOffset-sizeof(u_int32_t));
-			std::memcpy(buffer+xattrBlockSizeOffset, &xattrBlockLength, sizeof(u_int32_t));
+			::memcpy(buffer+xattrBlockSizeOffset, &xattrBlockLength, sizeof(u_int32_t));
 
 			outputBlock.ResizeBlock(xattrSize);
 		}
@@ -676,7 +676,7 @@ void BackupClientFileAttributes::WriteAt
 		}
 #endif
 
-		xattrOffset += std::strlen(reinterpret_cast<char*>(pattr+1))+1;
+		xattrOffset += ::strlen(reinterpret_cast<char*>(pattr+1))+1;
 	}
 	
 	// If working as root, set user IDs
@@ -817,7 +817,7 @@ void BackupClientFileAttributes::WriteEx
 	const char* buffer = static_cast<char*>(mpClearAttributes->GetBuffer());
 
 	u_int32_t xattrBlockLength = 0;
-	std::memcpy(&xattrBlockLength, buffer+xattrOffset, sizeof(u_int32_t));
+	::memcpy(&xattrBlockLength, buffer+xattrOffset, sizeof(u_int32_t));
 	int xattrBlockSize = ntohl(xattrBlockLength);
 	xattrOffset += sizeof(u_int32_t);
 
@@ -831,7 +831,7 @@ void BackupClientFileAttributes::WriteEx
 	while(xattrOffset<xattrEnd)
 	{
 		u_int16_t keyLength = 0;
-		std::memcpy(&keyLength, buffer+xattrOffset, sizeof(u_int16_t));
+		::memcpy(&keyLength, buffer+xattrOffset, sizeof(u_int16_t));
 		int keySize = ntohs(keyLength);
 		xattrOffset += sizeof(u_int16_t);
 
@@ -839,7 +839,7 @@ void BackupClientFileAttributes::WriteEx
 		xattrOffset += keySize;
 
 		u_int32_t valueLength = 0;
-		std::memcpy(&valueLength, buffer+xattrOffset, sizeof(u_int32_t));
+		::memcpy(&valueLength, buffer+xattrOffset, sizeof(u_int32_t));
 		int valueSize = ntohl(valueLength);
 		xattrOffset += sizeof(u_int32_t);
 
