$NetBSD: patch-ac,v 1.9 2010/02/21 19:32:26 tez Exp $

--- configure.orig	2009-05-06 12:35:38.000000000 -0500
+++ configure	2009-12-01 13:23:46.338973100 -0600
@@ -6110,6 +6110,224 @@
 
 need_locks="$enable_libtool_lock"
 
+if test "${ac_cv_header_sys_atomic_h+set}" = set; then
+  { echo "$as_me:$LINENO: checking for sys/atomic.h" >&5
+echo $ECHO_N "checking for sys/atomic.h... $ECHO_C" >&6; }
+if test "${ac_cv_header_sys_atomic_h+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+fi
+{ echo "$as_me:$LINENO: result: $ac_cv_header_sys_atomic_h" >&5
+echo "${ECHO_T}$ac_cv_header_sys_atomic_h" >&6; }
+else
+  # Is the header compilable?
+{ echo "$as_me:$LINENO: checking sys/atomic.h usability" >&5
+echo $ECHO_N "checking sys/atomic.h usability... $ECHO_C" >&6; }
+cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+$ac_includes_default
+#include <sys/atomic.h>
+_ACEOF
+rm -f conftest.$ac_objext
+if { (ac_try="$ac_compile"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_compile") 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } && {
+	 test -z "$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       } && test -s conftest.$ac_objext; then
+  ac_header_compiler=yes
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+	ac_header_compiler=no
+fi
+
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+{ echo "$as_me:$LINENO: result: $ac_header_compiler" >&5
+echo "${ECHO_T}$ac_header_compiler" >&6; }
+
+# Is the header present?
+{ echo "$as_me:$LINENO: checking sys/atomic.h presence" >&5
+echo $ECHO_N "checking sys/atomic.h presence... $ECHO_C" >&6; }
+cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+#include <sys/atomic.h>
+_ACEOF
+if { (ac_try="$ac_cpp conftest.$ac_ext"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_cpp conftest.$ac_ext") 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } >/dev/null && {
+	 test -z "$ac_c_preproc_warn_flag$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       }; then
+  ac_header_preproc=yes
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+  ac_header_preproc=no
+fi
+
+rm -f conftest.err conftest.$ac_ext
+{ echo "$as_me:$LINENO: result: $ac_header_preproc" >&5
+echo "${ECHO_T}$ac_header_preproc" >&6; }
+
+# So?  What about this header?
+case $ac_header_compiler:$ac_header_preproc:$ac_c_preproc_warn_flag in
+  yes:no: )
+    { echo "$as_me:$LINENO: WARNING: sys/atomic.h: accepted by the compiler, rejected by the preprocessor!" >&5
+echo "$as_me: WARNING: sys/atomic.h: accepted by the compiler, rejected by the preprocessor!" >&2;}
+    { echo "$as_me:$LINENO: WARNING: sys/atomic.h: proceeding with the compiler's result" >&5
+echo "$as_me: WARNING: sys/atomic.h: proceeding with the compiler's result" >&2;}
+    ac_header_preproc=yes
+    ;;
+  no:yes:* )
+    { echo "$as_me:$LINENO: WARNING: sys/atomic.h: present but cannot be compiled" >&5
+echo "$as_me: WARNING: sys/atomic.h: present but cannot be compiled" >&2;}
+    { echo "$as_me:$LINENO: WARNING: sys/atomic.h:     check for missing prerequisite headers?" >&5
+echo "$as_me: WARNING: sys/atomic.h:     check for missing prerequisite headers?" >&2;}
+    { echo "$as_me:$LINENO: WARNING: sys/atomic.h: see the Autoconf documentation" >&5
+echo "$as_me: WARNING: sys/atomic.h: see the Autoconf documentation" >&2;}
+    { echo "$as_me:$LINENO: WARNING: sys/atomic.h:     section \"Present But Cannot Be Compiled\"" >&5
+echo "$as_me: WARNING: sys/atomic.h:     section \"Present But Cannot Be Compiled\"" >&2;}
+    { echo "$as_me:$LINENO: WARNING: sys/atomic.h: proceeding with the preprocessor's result" >&5
+echo "$as_me: WARNING: sys/atomic.h: proceeding with the preprocessor's result" >&2;}
+    { echo "$as_me:$LINENO: WARNING: sys/atomic.h: in the future, the compiler will take precedence" >&5
+echo "$as_me: WARNING: sys/atomic.h: in the future, the compiler will take precedence" >&2;}
+
+    ;;
+esac
+{ echo "$as_me:$LINENO: checking for sys/atomic.h" >&5
+echo $ECHO_N "checking for sys/atomic.h... $ECHO_C" >&6; }
+if test "${ac_cv_header_sys_atomic_h+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  ac_cv_header_sys_atomic_h=$ac_header_preproc
+fi
+{ echo "$as_me:$LINENO: result: $ac_cv_header_sys_atomic_h" >&5
+echo "${ECHO_T}$ac_cv_header_sys_atomic_h" >&6; }
+
+fi
+if test $ac_cv_header_sys_atomic_h = yes; then
+  { echo "$as_me:$LINENO: checking for atomic_inc_32_nv" >&5
+echo $ECHO_N "checking for atomic_inc_32_nv... $ECHO_C" >&6; }
+if test "${ac_cv_func_atomic_inc_32_nv+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+/* Define atomic_inc_32_nv to an innocuous variant, in case <limits.h> declares atomic_inc_32_nv.
+   For example, HP-UX 11i <limits.h> declares gettimeofday.  */
+#define atomic_inc_32_nv innocuous_atomic_inc_32_nv
+
+/* System header to define __stub macros and hopefully few prototypes,
+    which can conflict with char atomic_inc_32_nv (); below.
+    Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
+    <limits.h> exists even on freestanding compilers.  */
+
+#ifdef __STDC__
+# include <limits.h>
+#else
+# include <assert.h>
+#endif
+
+#undef atomic_inc_32_nv
+
+/* Override any GCC internal prototype to avoid an error.
+   Use char because int might match the return type of a GCC
+   builtin and then its argument prototype would still apply.  */
+#ifdef __cplusplus
+extern "C"
+#endif
+char atomic_inc_32_nv ();
+/* The GNU C library defines this for functions which it implements
+    to always fail with ENOSYS.  Some functions are actually named
+    something starting with __ and the normal name is an alias.  */
+#if defined __stub_atomic_inc_32_nv || defined __stub___atomic_inc_32_nv
+choke me
+#endif
+
+int
+main ()
+{
+return atomic_inc_32_nv ();
+  ;
+  return 0;
+}
+_ACEOF
+rm -f conftest.$ac_objext conftest$ac_exeext
+if { (ac_try="$ac_link"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_link") 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } && {
+	 test -z "$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       } && test -s conftest$ac_exeext &&
+       $as_test_x conftest$ac_exeext; then
+  ac_cv_func_atomic_inc_32_nv=yes
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+	ac_cv_func_atomic_inc_32_nv=no
+fi
+
+rm -f core conftest.err conftest.$ac_objext conftest_ipa8_conftest.oo \
+      conftest$ac_exeext conftest.$ac_ext
+fi
+{ echo "$as_me:$LINENO: result: $ac_cv_func_atomic_inc_32_nv" >&5
+echo "${ECHO_T}$ac_cv_func_atomic_inc_32_nv" >&6; }
+if test $ac_cv_func_atomic_inc_32_nv = yes; then
+
+cat >>confdefs.h <<\_ACEOF
+#define HAVE_NETBSD_ATOMIC_OPS 1
+_ACEOF
+
+fi
+
+fi
+
+
 
 # On IRIX 5.3, sys/types and inttypes.h are conflicting.
 
@@ -20958,7 +21176,10 @@
   esac
   case " $CFLAGS " in
   *[\ \	]-Wno-pointer-sign[\ \	]*) ;;
-  *) CFLAGS="$CFLAGS -Wno-pointer-sign" ;;
+  *) if cc_supports_flag -Wno-pointer-sign; then
+	CFLAGS="$CFLAGS -Wno-pointer-sign"
+     fi
+     ;;
   esac
 
   # http://bugs.freedesktop.org/show_bug.cgi?id=19195
